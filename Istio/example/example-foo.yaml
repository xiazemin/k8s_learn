apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2021-11-04T05:47:20Z"
  generation: 2
  name: example-foo
  namespace: default
  ownerReferences:
  - apiVersion: samplecontroller.k8s.io/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: Foo
    name: example-foo
    uid: 046ee99c-469c-4d35-9e76-614965f715f1
  resourceVersion: "5015733"
  uid: 5caf5b5c-b672-41dd-90b5-d37cd69829b3
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: nginx
      controller: example-foo
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 26%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx
        controller: example-foo
    spec:
      containers:
      - image: nginx:latest
        imagePullPolicy: Always
        name: nginx
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  conditions:
  - lastTransitionTime: "2021-11-04T05:47:20Z"
    lastUpdateTime: "2021-11-04T05:48:28Z"
    message: ReplicaSet "example-foo-9bbb75dc8" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2022-01-05T03:03:35Z"
    lastUpdateTime: "2022-01-05T03:03:35Z"
    message: Deployment does not have minimum availability.
    reason: MinimumReplicasUnavailable
    status: "False"
    type: Available
  observedGeneration: 2
  replicas: 1
  unavailableReplicas: 1
  updatedReplicas: 1
